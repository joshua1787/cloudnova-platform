{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function OrderForm(){const[productName,setProductName]=useState('');const[quantity,setQuantity]=useState(1);const handleOrderSubmit=async e=>{e.preventDefault();// âš¡ Replace this with your ALB DNS\nconst API_URL=\"http://cloudnova-alb-1681081862.ap-south-1.elb.amazonaws.com/api/order\";try{const response=await fetch(API_URL,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({product_name:productName,quantity:quantity})});if(!response.ok){throw new Error('Network response was not ok');}const result=await response.json();alert(`Order Placed Successfully: ${JSON.stringify(result)}`);}catch(error){console.error(\"Error placing order:\",error);alert(\"Failed to place order. Please try again.\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDED2 Place an Order\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleOrderSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Product Name\",value:productName,onChange:e=>setProductName(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Quantity\",value:quantity,onChange:e=>setQuantity(e.target.value),min:\"1\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Order Now\"})]})]});}export default OrderForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","OrderForm","productName","setProductName","quantity","setQuantity","handleOrderSubmit","e","preventDefault","API_URL","response","fetch","method","headers","body","JSON","stringify","product_name","ok","Error","result","json","alert","error","console","children","onSubmit","type","placeholder","value","onChange","target","required","min"],"sources":["/home/joshua/CloudNova/app/frontend/react-app/src/components/OrderForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction OrderForm() {\n  const [productName, setProductName] = useState('');\n  const [quantity, setQuantity] = useState(1);\n\n  const handleOrderSubmit = async (e) => {\n    e.preventDefault();\n\n    // âš¡ Replace this with your ALB DNS\n    const API_URL = \"http://cloudnova-alb-1681081862.ap-south-1.elb.amazonaws.com/api/order\";\n\n    try {\n      const response = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          product_name: productName,\n          quantity: quantity,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const result = await response.json();\n      alert(`Order Placed Successfully: ${JSON.stringify(result)}`);\n    } catch (error) {\n      console.error(\"Error placing order:\", error);\n      alert(\"Failed to place order. Please try again.\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>ðŸ›’ Place an Order</h2>\n      <form onSubmit={handleOrderSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Product Name\"\n          value={productName}\n          onChange={(e) => setProductName(e.target.value)}\n          required\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Quantity\"\n          value={quantity}\n          onChange={(e) => setQuantity(e.target.value)}\n          min=\"1\"\n          required\n        />\n        <button type=\"submit\">Order Now</button>\n      </form>\n    </div>\n  );\n}\n\nexport default OrderForm;\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,QAAS,CAAAC,SAASA,CAAA,CAAG,CACnB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACQ,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,CAAC,CAAC,CAE3C,KAAM,CAAAU,iBAAiB,CAAG,KAAO,CAAAC,CAAC,EAAK,CACrCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB;AACA,KAAM,CAAAC,OAAO,CAAG,wEAAwE,CAExF,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACF,OAAO,CAAE,CACpCG,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,YAAY,CAAEf,WAAW,CACzBE,QAAQ,CAAEA,QACZ,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAACM,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAChD,CAEA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CACpCC,KAAK,CAAC,8BAA8BP,IAAI,CAACC,SAAS,CAACI,MAAM,CAAC,EAAE,CAAC,CAC/D,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5CD,KAAK,CAAC,0CAA0C,CAAC,CACnD,CACF,CAAC,CAED,mBACEtB,KAAA,QAAAyB,QAAA,eACE3B,IAAA,OAAA2B,QAAA,CAAI,6BAAiB,CAAI,CAAC,cAC1BzB,KAAA,SAAM0B,QAAQ,CAAEpB,iBAAkB,CAAAmB,QAAA,eAChC3B,IAAA,UACE6B,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,cAAc,CAC1BC,KAAK,CAAE3B,WAAY,CACnB4B,QAAQ,CAAGvB,CAAC,EAAKJ,cAAc,CAACI,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE,CAChDG,QAAQ,MACT,CAAC,cACFlC,IAAA,UACE6B,IAAI,CAAC,QAAQ,CACbC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAEzB,QAAS,CAChB0B,QAAQ,CAAGvB,CAAC,EAAKF,WAAW,CAACE,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE,CAC7CI,GAAG,CAAC,GAAG,CACPD,QAAQ,MACT,CAAC,cACFlC,IAAA,WAAQ6B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,WAAS,CAAQ,CAAC,EACpC,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAAxB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}